
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    
    gzip  on;
    gzip_static on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.1;
    gzip_comp_level 2;
    gzip_proxied     expired no-cache no-store private auth;
    gzip_types text/plain application/x-javascript application/javascript text/css application/xml application/json;
    gzip_vary on;

    upstream local_tomcat_cluster {
        #根据ip计算将请求分配各那个后端tomcat，许多人误认为可以解决session问题，其实并不能。
        #同一机器在多网情况下，路由切换，ip可能不同
        # ip_hash;
		# sticky;
        server 192.168.5.100:9898;
        server 192.168.5.100:9080;
    }

    server {
        listen       80;
        server_name  localhost;
		charset utf-8;  

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
         
        # cache static files
        location ~* \.(gif|jpe?g|png|ico|swf)$ {
                # d - 天
                # h - 小时
                # m - 分钟
            expires 365d;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
			proxy_pass              http://local_tomcat_cluster;
            proxy_redirect          off;
            proxy_buffering         off;
            proxy_set_header        Host            $host;     
            proxy_set_header        X-Real-IP       $remote_addr;     
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;     
            proxy_set_header        Cookie $http_cookie; 
            proxy_cookie_path       / /;

            chunked_transfer_encoding       off;
            proxy_connect_timeout   3;
            proxy_send_timeout      30;
            proxy_read_timeout      30;
        }
        
        # 由于js和css文件需要改动，设置的时间为5分钟
		location ~* \.(css|js)$ {
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
			proxy_pass              http://local_tomcat_cluster;
            proxy_redirect          off;
            proxy_buffering         off;
            proxy_set_header        Host            $host;     
            proxy_set_header        X-Real-IP       $remote_addr;     
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;     
            proxy_set_header        Cookie $http_cookie; 
            proxy_cookie_path       / /;

            chunked_transfer_encoding       off;
            proxy_connect_timeout   3;
            proxy_send_timeout      30;
            proxy_read_timeout      30;
        }
        
        location / {
			proxy_pass              http://local_tomcat_cluster;
            proxy_redirect          off;
            proxy_buffering         off;
            proxy_set_header        Host            $host;     
            proxy_set_header        X-Real-IP       $remote_addr;     
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;     
            proxy_set_header        Cookie $http_cookie; 
            proxy_cookie_path       / /;

            chunked_transfer_encoding       off;
            proxy_connect_timeout   3;
            proxy_send_timeout      30;
            proxy_read_timeout      30;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        location = /favicon.ico {
            expires 365d;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            log_not_found off;
            access_log off;
        } 
        
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
