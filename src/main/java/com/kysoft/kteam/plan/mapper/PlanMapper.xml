<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kysoft.kteam.plan.mapper.PlanMapper">
    <resultMap id="BaseResultMap" type="com.kysoft.kteam.plan.entity.Plan">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Nov 30 13:41:24 CST 2015.
        -->
        <id column="ID" jdbcType="VARCHAR" property="id" />
        <result column="SN" jdbcType="VARCHAR" property="sn" />
        <result column="TITLE" jdbcType="VARCHAR" property="title" />
        <result column="IS_DEPT_PLAN" jdbcType="TINYINT" property="isDeptPlan" />
        <result column="IS_ASSIGNED" jdbcType="TINYINT" property="isAssigned" />
        <result column="LEVEL" jdbcType="TINYINT" property="level" />
        <result column="OWNER_ID" jdbcType="VARCHAR" property="ownerId" />
        <result column="OWNER_NAME" jdbcType="VARCHAR" property="ownerName" />
        <result column="SUPERINTENDENT_ID" jdbcType="VARCHAR" property="superintendentId" />
        <result column="SUPERINTENDENT_NAME" jdbcType="VARCHAR" property="superintendentName" />
        <result column="COUPLER" jdbcType="VARCHAR" property="coupler" />
        <result column="OWN_DEPT_ID" jdbcType="VARCHAR" property="ownDeptId" />
        <result column="OWN_DEPT_NAME" jdbcType="VARCHAR" property="ownDeptName" />
        <result column="SUPERINTEND_DEPT_ID" jdbcType="VARCHAR" property="superintendDeptId" />
        <result column="SUPERINTEND_DEPT_NAME" jdbcType="VARCHAR" property="superintendDeptName" />
        <result column="COUPLE_DEPT" jdbcType="VARCHAR" property="coupleDept" />
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
        <result column="AUTHOR_ID" jdbcType="VARCHAR" property="authorId" />
        <result column="AUTHOR_NAME" jdbcType="VARCHAR" property="authorName" />
        <result column="APPROVE_TIME" jdbcType="TIMESTAMP" property="approveTime" />
        <result column="APPROVER_ID" jdbcType="VARCHAR" property="approverId" />
        <result column="APPROVER_NAME" jdbcType="VARCHAR" property="approverName" />
        <result column="IMPORTANCE" jdbcType="TINYINT" property="importance" />
        <result column="INSTANCY" jdbcType="TINYINT" property="instancy" />
        <result column="STATUS" jdbcType="TINYINT" property="status" />
        <result column="START" jdbcType="TIMESTAMP" property="start" />
        <result column="END" jdbcType="TIMESTAMP" property="end" />
        <result column="START_ACT" jdbcType="TIMESTAMP" property="startAct" />
        <result column="END_ACT" jdbcType="TIMESTAMP" property="endAct" />
        <result column="NEED_VERIFY" jdbcType="TINYINT" property="needVerify" />
        <result column="VERIFIER_ID" jdbcType="VARCHAR" property="verifierId" />
        <result column="VERIFIER_NAME" jdbcType="VARCHAR" property="verifierName" />
        <result column="VERIFY_TIME" jdbcType="TIMESTAMP" property="verifyTime" />
        <result column="QUALITY_ESTIMATE" jdbcType="TINYINT" property="qualityEstimate" />
        <result column="EFFECTIVE_ESTIMATE" jdbcType="TINYINT" property="effectiveEstimate" />
        <result column="SELF_QUALITY_ESTIMATE" jdbcType="TINYINT" property="selfQualityEstimate" />
        <result column="SELF_EFFECTIVE_ESTIMATE" jdbcType="TINYINT" property="selfEffectiveEstimate" />
        <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
        <result column="WEIGHT" jdbcType="TINYINT" property="weight" />
        <result column="WEIGHT_PER" jdbcType="TINYINT" property="weightPer" />
        <result column="PROGRESS" jdbcType="TINYINT" property="progress" />
        <result column="PARENT_ID" jdbcType="VARCHAR" property="parentId" />
        <result column="PARENT_NAME" jdbcType="VARCHAR" property="parentName" />
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Nov 30 13:41:24 CST 2015.
        -->
        ID, SN, TITLE, IS_DEPT_PLAN, IS_ASSIGNED, LEVEL, OWNER_ID, OWNER_NAME, SUPERINTENDENT_ID,
        SUPERINTENDENT_NAME, COUPLER, OWN_DEPT_ID, OWN_DEPT_NAME, SUPERINTEND_DEPT_ID, SUPERINTEND_DEPT_NAME,
        COUPLE_DEPT, CREATE_TIME, AUTHOR_ID, AUTHOR_NAME, APPROVE_TIME, APPROVER_ID, APPROVER_NAME,
        IMPORTANCE, INSTANCY, STATUS, START, END, START_ACT, END_ACT, NEED_VERIFY, VERIFIER_ID,
        VERIFIER_NAME, VERIFY_TIME, QUALITY_ESTIMATE, EFFECTIVE_ESTIMATE, SELF_QUALITY_ESTIMATE,
        SELF_EFFECTIVE_ESTIMATE, DESCRIPTION, WEIGHT, WEIGHT_PER, PROGRESS, PARENT_ID, PARENT_NAME
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Nov 30 13:41:24 CST 2015.
        -->
        select 'false' as QUERYID,
        <include refid="Base_Column_List" />
        from T_PLAN
        where ID = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Nov 30 13:41:24 CST 2015.
        -->
        delete from T_PLAN
        where ID = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.kysoft.kteam.plan.entity.Plan">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Nov 30 13:41:24 CST 2015.
        -->
        insert into T_PLAN (ID, SN, TITLE,
        IS_DEPT_PLAN, IS_ASSIGNED, LEVEL, OWNER_ID,
        OWNER_NAME, SUPERINTENDENT_ID, SUPERINTENDENT_NAME,
        COUPLER, OWN_DEPT_ID, OWN_DEPT_NAME,
        SUPERINTEND_DEPT_ID, SUPERINTEND_DEPT_NAME,
        COUPLE_DEPT, CREATE_TIME, AUTHOR_ID,
        AUTHOR_NAME, APPROVE_TIME, APPROVER_ID,
        APPROVER_NAME, IMPORTANCE, INSTANCY,
        STATUS, START, END,
        START_ACT, END_ACT, NEED_VERIFY,
        VERIFIER_ID, VERIFIER_NAME, VERIFY_TIME,
        QUALITY_ESTIMATE, EFFECTIVE_ESTIMATE, SELF_QUALITY_ESTIMATE,
        SELF_EFFECTIVE_ESTIMATE, DESCRIPTION, WEIGHT,
        WEIGHT_PER, PROGRESS, PARENT_ID,
        PARENT_NAME)
        values (#{id,jdbcType=VARCHAR}, #{sn,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR},
        #{isDeptPlan,jdbcType=TINYINT}, #{isAssigned,jdbcType=TINYINT}, #{ownerId,jdbcType=VARCHAR},
        #{ownerName,jdbcType=VARCHAR}, #{superintendentId,jdbcType=VARCHAR}, #{superintendentName,jdbcType=VARCHAR},
        #{coupler,jdbcType=VARCHAR}, #{ownDeptId,jdbcType=VARCHAR}, #{ownDeptName,jdbcType=VARCHAR},
        #{superintendDeptId,jdbcType=VARCHAR}, #{superintendDeptName,jdbcType=VARCHAR},
        #{coupleDept,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{authorId,jdbcType=VARCHAR},
        #{authorName,jdbcType=VARCHAR}, #{approveTime,jdbcType=TIMESTAMP}, #{approverId,jdbcType=VARCHAR},
        #{approverName,jdbcType=VARCHAR}, #{importance,jdbcType=TINYINT}, #{instancy,jdbcType=TINYINT},
        #{status,jdbcType=TINYINT}, #{start,jdbcType=TIMESTAMP}, #{end,jdbcType=TIMESTAMP},
        #{startAct,jdbcType=TIMESTAMP}, #{endAct,jdbcType=TIMESTAMP}, #{needVerify,jdbcType=TINYINT},
        #{verifierId,jdbcType=VARCHAR}, #{verifierName,jdbcType=VARCHAR}, #{verifyTime,jdbcType=TIMESTAMP},
        #{qualityEstimate,jdbcType=TINYINT}, #{effectiveEstimate,jdbcType=TINYINT}, #{selfQualityEstimate,jdbcType=TINYINT},
        #{selfEffectiveEstimate,jdbcType=TINYINT}, #{description,jdbcType=VARCHAR}, #{weight,jdbcType=TINYINT},
        #{weightPer,jdbcType=TINYINT}, #{progress,jdbcType=TINYINT}, #{parentId,jdbcType=VARCHAR},
        #{parentName,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.kysoft.kteam.plan.entity.Plan">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Nov 30 13:41:24 CST 2015.
        -->
        insert into T_PLAN
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="sn != null">
                SN,
            </if>
            <if test="title != null">
                TITLE,
            </if>
            <if test="isDeptPlan != null">
                IS_DEPT_PLAN,
            </if>
            <if test="isAssigned != null">
                IS_ASSIGNED,
            </if>
            <if test="level != null">
                LEVEL,
            </if>
            <if test="ownerId != null">
                OWNER_ID,
            </if>
            <if test="ownerName != null">
                OWNER_NAME,
            </if>
            <if test="superintendentId != null">
                SUPERINTENDENT_ID,
            </if>
            <if test="superintendentName != null">
                SUPERINTENDENT_NAME,
            </if>
            <if test="coupler != null">
                COUPLER,
            </if>
            <if test="ownDeptId != null">
                OWN_DEPT_ID,
            </if>
            <if test="ownDeptName != null">
                OWN_DEPT_NAME,
            </if>
            <if test="superintendDeptId != null">
                SUPERINTEND_DEPT_ID,
            </if>
            <if test="superintendDeptName != null">
                SUPERINTEND_DEPT_NAME,
            </if>
            <if test="coupleDept != null">
                COUPLE_DEPT,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="authorId != null">
                AUTHOR_ID,
            </if>
            <if test="authorName != null">
                AUTHOR_NAME,
            </if>
            <if test="approveTime != null">
                APPROVE_TIME,
            </if>
            <if test="approverId != null">
                APPROVER_ID,
            </if>
            <if test="approverName != null">
                APPROVER_NAME,
            </if>
            <if test="importance != null">
                IMPORTANCE,
            </if>
            <if test="instancy != null">
                INSTANCY,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="start != null">
                START,
            </if>
            <if test="end != null">
                END,
            </if>
            <if test="startAct != null">
                START_ACT,
            </if>
            <if test="endAct != null">
                END_ACT,
            </if>
            <if test="needVerify != null">
                NEED_VERIFY,
            </if>
            <if test="verifierId != null">
                VERIFIER_ID,
            </if>
            <if test="verifierName != null">
                VERIFIER_NAME,
            </if>
            <if test="verifyTime != null">
                VERIFY_TIME,
            </if>
            <if test="qualityEstimate != null">
                QUALITY_ESTIMATE,
            </if>
            <if test="effectiveEstimate != null">
                EFFECTIVE_ESTIMATE,
            </if>
            <if test="selfQualityEstimate != null">
                SELF_QUALITY_ESTIMATE,
            </if>
            <if test="selfEffectiveEstimate != null">
                SELF_EFFECTIVE_ESTIMATE,
            </if>
            <if test="description != null">
                DESCRIPTION,
            </if>
            <if test="weight != null">
                WEIGHT,
            </if>
            <if test="weightPer != null">
                WEIGHT_PER,
            </if>
            <if test="progress != null">
                PROGRESS,
            </if>
            <if test="parentId != null">
                PARENT_ID,
            </if>
            <if test="parentName != null">
                PARENT_NAME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="sn != null">
                #{sn,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="isDeptPlan != null">
                #{isDeptPlan,jdbcType=TINYINT},
            </if>
            <if test="isAssigned != null">
                #{isAssigned,jdbcType=TINYINT},
            </if>
            <if test="level != null">
                #{level,jdbcType=TINYINT},
            </if>
            <if test="ownerId != null">
                #{ownerId,jdbcType=VARCHAR},
            </if>
            <if test="ownerName != null">
                #{ownerName,jdbcType=VARCHAR},
            </if>
            <if test="superintendentId != null">
                #{superintendentId,jdbcType=VARCHAR},
            </if>
            <if test="superintendentName != null">
                #{superintendentName,jdbcType=VARCHAR},
            </if>
            <if test="coupler != null">
                #{coupler,jdbcType=VARCHAR},
            </if>
            <if test="ownDeptId != null">
                #{ownDeptId,jdbcType=VARCHAR},
            </if>
            <if test="ownDeptName != null">
                #{ownDeptName,jdbcType=VARCHAR},
            </if>
            <if test="superintendDeptId != null">
                #{superintendDeptId,jdbcType=VARCHAR},
            </if>
            <if test="superintendDeptName != null">
                #{superintendDeptName,jdbcType=VARCHAR},
            </if>
            <if test="coupleDept != null">
                #{coupleDept,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="authorId != null">
                #{authorId,jdbcType=VARCHAR},
            </if>
            <if test="authorName != null">
                #{authorName,jdbcType=VARCHAR},
            </if>
            <if test="approveTime != null">
                #{approveTime,jdbcType=TIMESTAMP},
            </if>
            <if test="approverId != null">
                #{approverId,jdbcType=VARCHAR},
            </if>
            <if test="approverName != null">
                #{approverName,jdbcType=VARCHAR},
            </if>
            <if test="importance != null">
                #{importance,jdbcType=TINYINT},
            </if>
            <if test="instancy != null">
                #{instancy,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="start != null">
                #{start,jdbcType=TIMESTAMP},
            </if>
            <if test="end != null">
                #{end,jdbcType=TIMESTAMP},
            </if>
            <if test="startAct != null">
                #{startAct,jdbcType=TIMESTAMP},
            </if>
            <if test="endAct != null">
                #{endAct,jdbcType=TIMESTAMP},
            </if>
            <if test="needVerify != null">
                #{needVerify,jdbcType=TINYINT},
            </if>
            <if test="verifierId != null">
                #{verifierId,jdbcType=VARCHAR},
            </if>
            <if test="verifierName != null">
                #{verifierName,jdbcType=VARCHAR},
            </if>
            <if test="verifyTime != null">
                #{verifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="qualityEstimate != null">
                #{qualityEstimate,jdbcType=TINYINT},
            </if>
            <if test="effectiveEstimate != null">
                #{effectiveEstimate,jdbcType=TINYINT},
            </if>
            <if test="selfQualityEstimate != null">
                #{selfQualityEstimate,jdbcType=TINYINT},
            </if>
            <if test="selfEffectiveEstimate != null">
                #{selfEffectiveEstimate,jdbcType=TINYINT},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="weight != null">
                #{weight,jdbcType=TINYINT},
            </if>
            <if test="weightPer != null">
                #{weightPer,jdbcType=TINYINT},
            </if>
            <if test="progress != null">
                #{progress,jdbcType=TINYINT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="parentName != null">
                #{parentName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.kysoft.kteam.plan.entity.Plan">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Nov 30 13:41:24 CST 2015.
        -->
        update T_PLAN
        <set>
            <if test="sn != null">
                SN = #{sn,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                TITLE = #{title,jdbcType=VARCHAR},
            </if>
            <if test="isDeptPlan != null">
                IS_DEPT_PLAN = #{isDeptPlan,jdbcType=TINYINT},
            </if>
            <if test="isAssigned != null">
                IS_ASSIGNED = #{isAssigned,jdbcType=TINYINT},
            </if>
            <if test="level != null">
                LEVEL = #{level,jdbcType=TINYINT},
            </if>
            <if test="ownerId != null">
                OWNER_ID = #{ownerId,jdbcType=VARCHAR},
            </if>
            <if test="ownerName != null">
                OWNER_NAME = #{ownerName,jdbcType=VARCHAR},
            </if>
            <if test="superintendentId != null">
                SUPERINTENDENT_ID = #{superintendentId,jdbcType=VARCHAR},
            </if>
            <if test="superintendentName != null">
                SUPERINTENDENT_NAME = #{superintendentName,jdbcType=VARCHAR},
            </if>
            <if test="coupler != null">
                COUPLER = #{coupler,jdbcType=VARCHAR},
            </if>
            <if test="ownDeptId != null">
                OWN_DEPT_ID = #{ownDeptId,jdbcType=VARCHAR},
            </if>
            <if test="ownDeptName != null">
                OWN_DEPT_NAME = #{ownDeptName,jdbcType=VARCHAR},
            </if>
            <if test="superintendDeptId != null">
                SUPERINTEND_DEPT_ID = #{superintendDeptId,jdbcType=VARCHAR},
            </if>
            <if test="superintendDeptName != null">
                SUPERINTEND_DEPT_NAME = #{superintendDeptName,jdbcType=VARCHAR},
            </if>
            <if test="coupleDept != null">
                COUPLE_DEPT = #{coupleDept,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="authorId != null">
                AUTHOR_ID = #{authorId,jdbcType=VARCHAR},
            </if>
            <if test="authorName != null">
                AUTHOR_NAME = #{authorName,jdbcType=VARCHAR},
            </if>
            <if test="approveTime != null">
                APPROVE_TIME = #{approveTime,jdbcType=TIMESTAMP},
            </if>
            <if test="approverId != null">
                APPROVER_ID = #{approverId,jdbcType=VARCHAR},
            </if>
            <if test="approverName != null">
                APPROVER_NAME = #{approverName,jdbcType=VARCHAR},
            </if>
            <if test="importance != null">
                IMPORTANCE = #{importance,jdbcType=TINYINT},
            </if>
            <if test="instancy != null">
                INSTANCY = #{instancy,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=TINYINT},
            </if>
            <if test="start != null">
                START = #{start,jdbcType=TIMESTAMP},
            </if>
            <if test="end != null">
                END = #{end,jdbcType=TIMESTAMP},
            </if>
            <if test="startAct != null">
                START_ACT = #{startAct,jdbcType=TIMESTAMP},
            </if>
            <if test="endAct != null">
                END_ACT = #{endAct,jdbcType=TIMESTAMP},
            </if>
            <if test="needVerify != null">
                NEED_VERIFY = #{needVerify,jdbcType=TINYINT},
            </if>
            <if test="verifierId != null">
                VERIFIER_ID = #{verifierId,jdbcType=VARCHAR},
            </if>
            <if test="verifierName != null">
                VERIFIER_NAME = #{verifierName,jdbcType=VARCHAR},
            </if>
            <if test="verifyTime != null">
                VERIFY_TIME = #{verifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="qualityEstimate != null">
                QUALITY_ESTIMATE = #{qualityEstimate,jdbcType=TINYINT},
            </if>
            <if test="effectiveEstimate != null">
                EFFECTIVE_ESTIMATE = #{effectiveEstimate,jdbcType=TINYINT},
            </if>
            <if test="selfQualityEstimate != null">
                SELF_QUALITY_ESTIMATE = #{selfQualityEstimate,jdbcType=TINYINT},
            </if>
            <if test="selfEffectiveEstimate != null">
                SELF_EFFECTIVE_ESTIMATE = #{selfEffectiveEstimate,jdbcType=TINYINT},
            </if>
            <if test="description != null">
                DESCRIPTION = #{description,jdbcType=VARCHAR},
            </if>
            <if test="weight != null">
                WEIGHT = #{weight,jdbcType=TINYINT},
            </if>
            <if test="weightPer != null">
                WEIGHT_PER = #{weightPer,jdbcType=TINYINT},
            </if>
            <if test="progress != null">
                PROGRESS = #{progress,jdbcType=TINYINT},
            </if>
            <if test="parentId != null">
                PARENT_ID = #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="parentName != null">
                PARENT_NAME = #{parentName,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.kysoft.kteam.plan.entity.Plan">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Nov 30 13:41:24 CST 2015.
        -->
        update T_PLAN
        set SN = #{sn,jdbcType=VARCHAR},
        TITLE = #{title,jdbcType=VARCHAR},
        IS_DEPT_PLAN = #{isDeptPlan,jdbcType=TINYINT},
        IS_ASSIGNED = #{isAssigned,jdbcType=TINYINT},
        LEVEL = #{level,jdbcType=TINYINT},
        OWNER_ID = #{ownerId,jdbcType=VARCHAR},
        OWNER_NAME = #{ownerName,jdbcType=VARCHAR},
        SUPERINTENDENT_ID = #{superintendentId,jdbcType=VARCHAR},
        SUPERINTENDENT_NAME = #{superintendentName,jdbcType=VARCHAR},
        COUPLER = #{coupler,jdbcType=VARCHAR},
        OWN_DEPT_ID = #{ownDeptId,jdbcType=VARCHAR},
        OWN_DEPT_NAME = #{ownDeptName,jdbcType=VARCHAR},
        SUPERINTEND_DEPT_ID = #{superintendDeptId,jdbcType=VARCHAR},
        SUPERINTEND_DEPT_NAME = #{superintendDeptName,jdbcType=VARCHAR},
        COUPLE_DEPT = #{coupleDept,jdbcType=VARCHAR},
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
        AUTHOR_ID = #{authorId,jdbcType=VARCHAR},
        AUTHOR_NAME = #{authorName,jdbcType=VARCHAR},
        APPROVE_TIME = #{approveTime,jdbcType=TIMESTAMP},
        APPROVER_ID = #{approverId,jdbcType=VARCHAR},
        APPROVER_NAME = #{approverName,jdbcType=VARCHAR},
        IMPORTANCE = #{importance,jdbcType=TINYINT},
        INSTANCY = #{instancy,jdbcType=TINYINT},
        STATUS = #{status,jdbcType=TINYINT},
        START = #{start,jdbcType=TIMESTAMP},
        END = #{end,jdbcType=TIMESTAMP},
        START_ACT = #{startAct,jdbcType=TIMESTAMP},
        END_ACT = #{endAct,jdbcType=TIMESTAMP},
        NEED_VERIFY = #{needVerify,jdbcType=TINYINT},
        VERIFIER_ID = #{verifierId,jdbcType=VARCHAR},
        VERIFIER_NAME = #{verifierName,jdbcType=VARCHAR},
        VERIFY_TIME = #{verifyTime,jdbcType=TIMESTAMP},
        QUALITY_ESTIMATE = #{qualityEstimate,jdbcType=TINYINT},
        EFFECTIVE_ESTIMATE = #{effectiveEstimate,jdbcType=TINYINT},
        SELF_QUALITY_ESTIMATE = #{selfQualityEstimate,jdbcType=TINYINT},
        SELF_EFFECTIVE_ESTIMATE = #{selfEffectiveEstimate,jdbcType=TINYINT},
        DESCRIPTION = #{description,jdbcType=VARCHAR},
        WEIGHT = #{weight,jdbcType=TINYINT},
        WEIGHT_PER = #{weightPer,jdbcType=TINYINT},
        PROGRESS = #{progress,jdbcType=TINYINT},
        PARENT_ID = #{parentId,jdbcType=VARCHAR},
        PARENT_NAME = #{parentName,jdbcType=VARCHAR}
        where ID = #{id,jdbcType=VARCHAR}
    </update>

    <select id="queryPersonalPlan" resultMap="BaseResultMap">
        select 'false' as QUERYID,
        <include refid="Base_Column_List" />
        from T_PLAN
        WHERE PARENT_ID = '' AND IS_DEPT_PLAN = 0 AND OWNER_ID=#{_userId}
        <if test="isAnnualPlan != null">
            AND IS_ANNUAL_PLAN = #{isAnnualPlan}
        </if>
        <if test="title != null and title!=''">
            and (TITLE like concat(concat('%', #{title}), '%'))
        </if>
        ORDER BY
        <if test="order != null">
            ${sort} ${order},
        </if>
        CREATE_TIME DESC
    </select>

    <select id="selectPersonalPlan" resultMap="BaseResultMap">
        <![CDATA[
    select (select sign(count(*)) from T_PLAN d where 0 <> (select count(*) from T_PLAN f where f.PARENT_ID = e.ID)) as ISPARENT,
    ]]>
        <include refid="Base_Column_List" />
        from T_PLAN e where 1 = 1 and (parent_id is null or parent_id='')
        <if test="start != null and end != null ">
            <![CDATA[
      and (
      (START <= #{start} AND END >= #{start})
      OR (START < #{end} AND END >= #{end})
      OR (START >= #{start} AND END <= #{end})
      )
      ]]>
        </if>
        AND
        <![CDATA[
    (
      (IS_DEPT_PLAN = 1 AND STATUS >= 3 AND
        (OWNER_ID=#{userId} OR SUPERINTENDENT_ID = #{userId} OR VERIFIER_ID = #{userId} OR COUPLER LIKE concat(concat('%',#{userId}), '%'))
      ) OR (
        IS_DEPT_PLAN = 0 AND OWNER_ID=#{userId}
      )
    )
      ]]>
        ORDER BY
        <if test="order != null">
            ${sort} ${order},
        </if>
        SN ASC
    </select>
    <!--SUPERINTENDENT_ID in(select user_id from SYS_USER where org_id=#{_orgId})-->
    <select id="queryDeptPlan" resultMap="BaseResultMap">
        select 'false' as QUERYID,
        <include refid="Base_Column_List" />
        from T_PLAN
        WHERE IS_DEPT_PLAN = 1 AND ( (PARENT_ID = '' AND OWN_DEPT_ID=#{_orgId}) or (PARENT_ID != '' and PARENT_ID is not null AND SUPERINTENDENT_ID=#{_userId}))
        <if test="isAnnualPlan != null">
            AND IS_ANNUAL_PLAN = #{isAnnualPlan}
        </if>
        <if test="title != null and title!=''">
            and (TITLE like concat(concat('%', #{title}), '%'))
        </if>
        <if test="deptId != null and deptId!=''">
            and (OWN_DEPT_ID =#{deptId})
        </if>
        ORDER BY
        <if test="order != null">
            ${sort} ${order},
        </if>
        START ASC
    </select>

    <select id="queryDeptPlan2" resultMap="BaseResultMap">
        select 'false' as QUERYID,
        <include refid="Base_Column_List" />
        from T_PLAN
        WHERE PARENT_ID = '' AND IS_DEPT_PLAN = 1
        <if test="isAnnualPlan != null">
            AND IS_ANNUAL_PLAN = #{isAnnualPlan}
        </if>
        <if test="title != null and title!=''">
            and (TITLE like concat(concat('%', #{title}), '%'))
        </if>
        <if test="deptId != null and deptId!=''">
            and (OWN_DEPT_ID =#{deptId})
        </if>
        ORDER BY
        <if test="order != null">
            ${sort} ${order},
        </if>
        SN ASC
    </select>

    <!-- oracle
    <select id="selectPlanDetailByParentId" resultMap="BaseResultMap" parameterType="java.lang.String" >
      select decode(connect_by_isleaf, 0, 1, 0) as ISPARENT, <include refid="Base_Column_List" />
      from t_plan_all where PARENT_ID = #{id,jdbcType=VARCHAR}
      START WITH PARENT_ID = #{id,jdbcType=VARCHAR} CONNECT BY PRIOR ID = PARENT_ID
      order by TITLE
    </select>
    -->

    <select id="selectPlanItemsByParentId" parameterType="java.lang.String" resultMap="BaseResultMap">
        <![CDATA[
    select (select sign(count(*)) from T_PLAN d where 0 <> (select count(*) from T_PLAN f where f.PARENT_ID = e.ID)) as ISPARENT,
    ]]>
        <include refid="Base_Column_List" />
        from T_PLAN e where
        <if test="id!=null and id!=''">
            PARENT_ID = #{id,jdbcType=VARCHAR}
        </if>
        <if test="id==null or id==''">
            PARENT_ID = ''
        </if>
        <if test="isDeptPlan!=null and isDeptPlan!=''">
            and is_dept_plan = #{isDeptPlan}
        </if>
        ORDER BY
        <if test="order != null">
            ${sort} ${order},
        </if>
        SN ASC
    </select>

    <select id="queryByParentId" resultMap="BaseResultMap">
        <![CDATA[
    select (select sign(count(*)) from T_PLAN d where 0 <> (select count(*) from T_PLAN f where f.PARENT_ID = e.ID)) as ISPARENT,
    ]]>
        <include refid="Base_Column_List" />
        from T_PLAN e where 1=1
        <if test="parentId!=null and parentId!=''">
            and PARENT_ID = #{parentId}
        </if>
        <if test="isDeptPlan!=null or isDeptPlan!=''">
            and is_dept_plan = #{isDeptPlan}
        </if>
        order by SN ASC
    </select>

    <!--select max(sn+0) sn
    from T_PLAN e where 1=1
    <if test="id!=null and id!=''">
      and PARENT_ID = #{id}
    </if>
    <if test="id==null or id==''">
      and (PARENT_ID is null or parent_id='')
    </if>
    <if test="isDeptPlan!=null and isDeptPlan!=''">
      and IS_DEPT_PLAN = #{isDeptPlan}
    </if>-->
    <select id="selectNextSnByParentId" resultType="java.lang.String">
        <if test="isDeptPlan==1">
            select ifnull(max(sn),concat((select year(sysdate())),'.',#{orgId})) sn
            from T_PLAN e where 1=1
            and IS_DEPT_PLAN = #{isDeptPlan}
            <if test="id==null or id==''">
                and sn like concat((select year(sysdate())),'.',#{orgId},'.','%')
            </if>
        </if>
        <if test="isDeptPlan==0">
            select ifnull(max(sn),concat((select year(sysdate())),'.',#{userId})) sn
            from T_PLAN e where 1=1
            and IS_DEPT_PLAN = #{isDeptPlan}
            <if test="id==null or id==''">
                and sn like concat((select year(sysdate())),'.',#{userId},'.','%')
            </if>
        </if>
        <if test="id!=null and id!=''">
            and PARENT_ID = #{id}
        </if>
        <if test="id==null or id==''">
            and (PARENT_ID is null or parent_id='')
        </if>

    </select>

    <select id="query" resultMap="BaseResultMap">
        <![CDATA[
    select (select sign(count(*)) from T_PLAN d where 0 <> (select count(*) from T_PLAN f where f.PARENT_ID = e.ID)) as ISPARENT,
    ]]>
        <include refid="Base_Column_List" />
        from T_PLAN e where 1=1
        <if test="parentId!=null and parentId!=''">
            and PARENT_ID = #{parentId}
        </if>
        <if test="parentId==null or parentId==''">
            and PARENT_ID = ''
        </if>
        <if test="isDeptPlan!=null">
            and is_dept_plan = #{isDeptPlan}
        </if>
        <if test="sn!=null and sn!=''">
            and sn = #{sn}
        </if>
        <if test="title!=null and title!=''">
            and title = #{title}
        </if>
        <if test="userId != null and userId!=''">
            AND OWNER_ID=#{userId}
        </if>
        <if test="isAnnualPlan != null">
            AND IS_ANNUAL_PLAN = #{isAnnualPlan}
        </if>
        <if test="status != null and status!=''">
            and STATUS =#{status}
        </if>
        <if test="approverId != null and approverId!=''">
            and approver_id =#{approverId}
        </if>
        <if test="verifierId != null and verifierId!=''">
            and verifier_id =#{verifierId}
        </if>
        <if test="ownDeptId != null and ownDeptId!=''">
            and OWN_DEPT_ID =#{ownDeptId}
        </if>
        <if test="ownerId != null and ownerId!=''">
            and OWNER_ID =#{ownerId}
        </if>
        <if test="start != null and end != null ">
            <![CDATA[
      and (
      (START <= #{start} AND END >= #{start})
      OR (START < #{end} AND END >= #{end})
      OR (START >= #{start} AND END <= #{end})
      )
      ]]>
        </if>

        order by SN ASC
    </select>

    <select id="selectDeptPlanItems" resultMap="BaseResultMap">
        <![CDATA[
    select (select sign(count(*)) from T_PLAN d where 0 <> (select count(*) from T_PLAN f where f.PARENT_ID = e.ID and IS_DEPT_PLAN = 1)) as ISPARENT,
    ]]>
        <include refid="Base_Column_List" />
        from T_PLAN e where IS_DEPT_PLAN = 1 and (PARENT_ID = '' or parent_id='')
        <if test="orgId != null and orgId !=''">
            and OWN_DEPT_ID = #{orgId}
        </if>
        <if test="orgId == null or orgId ==''">
            and OWN_DEPT_ID in(select org_id from T_PLAN_USER_ORG where user_id=#{userId} union all select org_id from SYS_USER where user_id=#{userId})
        </if>
        <![CDATA[
      and (
        (START <= #{start} AND END >= #{start})
        OR (START < #{end} AND END >= #{end})
        OR (START >= #{start} AND END <= #{end})
      )
    ]]>
        <if test="isSelfDeptFlag != null and isSelfDeptFlag != '' and isSelfDeptFlag == 0 ">
            and STATUS >1
        </if>
        <if test="isSelfDeptFlag == null or isSelfDeptFlag == '' or isSelfDeptFlag == 1 ">
            and STATUS >=1
        </if>
        ORDER BY
        <if test="order != null">
            ${sort} ${order},
        </if>
        SN ASC
    </select>

    <!--<update id="updateStatusById" parameterType="com.kysoft.kteam.plan.entity.Plan">
      update T_PLAN
      <set>
        <if test="startAct != null">
          START_ACT = #{startAct,jdbcType=TIMESTAMP},
        </if>
        <if test="endAct != null">
          END_ACT = #{endAct,jdbcType=TIMESTAMP},
        </if>

      </set>
      where ID = #{id,jdbcType=VARCHAR}
    </update>
  -->
    <select id="selectByOwnerId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />
        from T_PLAN
        where OWNER_ID = #{_userId,jdbcType=VARCHAR}
        <![CDATA[and STATUS > 2]]>
        and START IS NOT NULL and END IS NOT NULL
    </select>

    <select id="selectByParentId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />
        from T_PLAN
        where PARENT_ID = #{parentId}
    </select>

    <select id="selectByParticipantId" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />
        from T_PLAN e where 1 = 1
        <if test="start != null and end != null ">
            <![CDATA[
      and (
      (START <= #{start} AND END >= #{start})
      OR (START < #{end} AND END >= #{end})
      OR (START >= #{start} AND END <= #{end})
      )
      ]]>
        </if>
        AND
        <![CDATA[
    (
      (IS_DEPT_PLAN = 1 AND STATUS >= 2 AND
        (OWNER_ID=#{participantId} OR SUPERINTENDENT_ID = #{participantId} OR VERIFIER_ID = #{participantId} OR APPROVER_ID = #{participantId} OR COUPLER LIKE concat(concat('%',#{participantId}), '%'))
      ) OR (
        IS_DEPT_PLAN = 0 AND OWNER_ID=#{participantId}
      )
    )
      ]]>
        order by SN ASC
    </select>

</mapper>