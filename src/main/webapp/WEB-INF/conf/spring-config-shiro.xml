<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 单realm应用,如果有多个realm,使用'realms'属性代替 -->
        <property name="realm" ref="huskyJdbcRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="shiroCacheManager"/>
    </bean>

    <!-- 自定义的Realm -->
    <bean id="huskyJdbcRealm" class="net.sf.husky.shiro.realm.HuskyJdbcRealm">
        <!-- 用切面缓存代理了 此处就不缓存了 -->
        <property name="authenticationCachingEnabled" value="false"/>
        <property name="authorizationCachingEnabled" value="false"/>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.ServletContainerSessionManager" />
	
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="${shiro.login.url}"/>
        <property name="unauthorizedUrl" value="${shiro.unauthorizedUrl}"/>
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="authenticationFilter"/>
                <entry key="logout" value-ref="logoutFilter"/>
                <entry key="forceLogout" value-ref="forceLogoutFilter"/>
                <entry key="sysUser" value-ref="sysUserFilter"/>
                <entry key="kickout" value-ref="kickoutSessionControlFilter"/>
                <entry key="activiti-rest" value-ref="activitiRestFilter"/>
                <!--
                <entry key="jCaptchaValidate" value-ref="jCaptchaValidateFilter"/>
                -->
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /login.html = anon

                /css/** = anon
            	/js/** = anon
                /images/** = anon
                /index.jsp = authc,sysUser
                /**/*.html = anon
                /**/*.js = anon

                <!--/user/checkUserExist = anon-->
                /audit/mail/* = anon
                /weixin/**/* = anon
                /identiti/**/* = anon
                /user/*/exist = anon
                /jcaptcha* = anon
                /captcha* = anon
                /docUpload/**/* = anon
                /41/4101.jsp = anon
                 
                /login = authc,kickout
                /activiti-rest = sysUser,activiti-rest
                /logout = logout
                
                /** = forceLogout,kickout,sysUser,perms
                <!-- /** = forceLogout,kickout,sysUser,onlineSession,perms -->
                <!-- /** = forceLogout,sysUser,onlineSession,perms -->
            </value>
        </property>
    </bean>
	
    <!-- filter -->
    <!--替换默认的form 验证过滤器-->
    <bean id="authenticationFilter" class="net.sf.husky.shiro.web.filter.authc.CustomAuthenticationFilter" />

    <!-- 退出登录过滤器 -->
    <bean id="logoutFilter" class="net.sf.husky.shiro.web.filter.authc.LogoutFilter" >
    	<property name="cacheManager" ref="shiroCacheManager" />
    </bean>
	
	<!-- 强制退出过滤器 ,检查Session中的强制退出标志-->
    <bean id="forceLogoutFilter" class="net.sf.husky.shiro.web.filter.ForceLogoutFilter" />

	<!-- 同一账号同时登录人数控制过滤器 -->
    <bean id="kickoutSessionControlFilter" class="net.sf.husky.shiro.web.filter.authc.KickoutSessionControlFilter" >
    	<property name="cacheManager" ref="shiroCacheManager" />
    </bean>

    <!--提取系统用户（User） 验证用户是否合法的过滤器（如是否删除了 是否锁定了）-->
    <bean id="sysUserFilter" class="net.sf.husky.shiro.web.filter.SysUserFilter" />
    <bean id="activitiRestFilter" class="net.sf.husky.shiro.web.filter.ActivitiRestFilter" />

	<!-- <bean id="jCaptchaValidateFilter" class="org.apache.shiro.web.filter.jcaptcha.JCaptchaValidateFilter"> 
		<property name="jcaptchaEbabled" value="${shiro.jcaptcha.enable}"/> <property 
		name="jcaptchaParam" value="jcaptchaCode"/> <property name="jcapatchaErrorUrl" 
		value="${shiro.jcaptcha.error.url}"/> </bean> -->

    <!-- aop and other-->
    <!-- For simplest integration, so that all SecurityUtils.* methods work in all cases, -->
    <!-- make the securityManager bean a static singleton.  DO NOT do this in web         -->
    <!-- applications - see the 'Web Applications' section below instead.                 -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

	<bean id="shiroCacheManager" class="net.sf.husky.shiro.cache.SpringCacheManagerWrapper">
        <property name="cacheManager" ref="springCacheManager"/>
    </bean> 
    
    <bean class="net.sf.husky.shiro.web.listener.HuskySessionListener"/>
    
</beans>